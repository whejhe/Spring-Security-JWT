@OneToOne: Define una relación uno a uno entre dos entidades.

@Entity
public class User {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    @OneToOne(cascade = CascadeType.ALL)
    @JoinColumn(name = "profile_id", referencedColumnName = "id")
    private UserProfile profile;
}

@Entity
public class UserProfile {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    @OneToOne(mappedBy = "profile")
    private User user;
}
-----------------------------------------------------------------------------
@OneToMany: Define una relación uno a muchos entre dos entidades.

@Entity
public class User {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    @OneToMany(mappedBy = "user", cascade = CascadeType.ALL)
    private List<Order> orders;
}

@Entity
public class Order {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    @ManyToOne
    @JoinColumn(name = "user_id", nullable = false)
    private User user;
}
--------------------------------------------------------------------------------
@ManyToOne: Define una relación muchos a uno entre dos entidades.

@Entity
public class Order {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    @ManyToOne
    @JoinColumn(name = "user_id", nullable = false)
    private User user;
}
----------------------------------------------------------------------------
@ManyToMany: Define una relación muchos a muchos entre dos entidades.

@Entity
public class Student {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    @ManyToMany
    @JoinTable(
        name = "student_course",
        joinColumns = @JoinColumn(name = "student_id"),
        inverseJoinColumns = @JoinColumn(name = "course_id")
    )
    private Set<Course> courses;
}

@Entity
public class Course {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    @ManyToMany(mappedBy = "courses")
    private Set<Student> students;
}
-----------------------------------------------------------------------------
@JoinColumn: Especifica la columna de unión para una relación.
@ManyToOne
@JoinColumn(name = "user_id", nullable = false)
private User user;
--------------------------------------------------------------------------
@JoinTable: Define la tabla de unión para una relación muchos a muchos.
@ManyToMany
@JoinTable(
    name = "student_course",
    joinColumns = @JoinColumn(name = "student_id"),
    inverseJoinColumns = @JoinColumn(name = "course_id")
)
private Set<Course> courses;
------------------------------------------------------------------------------
@Cascade: Especifica el comportamiento de cascada para las operaciones de persistencia.

@OneToMany(mappedBy = "user", cascade = CascadeType.ALL)
private List<Order> orders;
--------------------------------------------------------------------------------
